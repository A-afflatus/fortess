name: Release CI

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_UPLOAD_ID: ${{ steps.create_release.outputs.id }}

    steps:
      - uses: actions/checkout@v2
      - name: Query version number
        id: get_version
        shell: bash
        run: |
          echo "using version tag ${GITHUB_REF:10}"
          echo  name=version::"${GITHUB_REF:10}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: '${{ github.ref  }}'
          release_name: '${{ github.ref  }}'
          body: 'See the assets to download this version and install.'

  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
        # platform: [macos-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
    # 安装 Rust
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
    #! 使用 Rust 缓存，加快安装速度 ,这个又问题，调一下
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri"

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      - name: cargo install rsw
        run: |
          cargo install rsw
          cargo install wasm-pack
        
      # 建议都安装个 Node,bun的支持现在还说不准
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
    # 使用setup-bun Action安装Bun
      - name: Install Bun
        if: matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest'
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
    # 使用Bun安装依赖
      - name: Install Dependencies with Bun
        if: matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest'
        run: bun install
    # 使用Bun运行构建
      - name: Run Build with Bun
        if: matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest'
        run: bun run build

    #* windows环境下使用npm
      - name: Install npm dependencies
        if: matrix.platform == 'windows-latest'
        run: npm install

      - uses: tauri-apps/tauri-action@v0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        with:
          releaseId: ${{ needs.create-release.outputs.RELEASE_UPLOAD_ID }}

  # 生成静态资源并将其推送到 github pages
  updater:
    runs-on: ubuntu-latest
    needs: [create-release, build-tauri]

    steps:
      - uses: actions/checkout@v2

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      # 使用Bun安装依赖
      - name: Install Dependencies with Bun
        run: bun install

      - run: bun run updater
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy install.json
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./updater
          force_orphan: true